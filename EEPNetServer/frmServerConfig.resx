<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnRefresh.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAAScQAA
        EnEB89x6jgAAAVBJREFUOE/NkiFywzAQRXOE3KC5gX0DmzVMhmE2DLNZzVTWMBuGWaxlFmuKIloU3yC6
        gf4N1F3F0zqTpp3MFPTNiKz0//5de/Zn9Hu36PdoOwOjdrBN7wrZufl4/TMs1gZgoXyZHAWQSTE+uw6J
        rXoFktoiyjXStfZJaZC3QEkmZecyfte9uzitBh9EUxQZZBv4eKVIqC2ZGDaKC+2LFj7fwpJJQe+GdG08
        JT4fTT7DcPe7+8YK2S+4FuV9Fa0U4kx58QRbKfhqS03INIimTAzMWAqQSRotG81iTpI9nlKO11/QwrSQ
        QEQJxlKgeXNxuzt1DuLK+jhrLw3K7bE67UD7u0R+zscL45k5Nndm8WL5jQHDEdPaehojHUuBi4VdQ8hD
        SJGszTCWbkfUA4JJeSjyxoWvcROR6OaitoPYAOLheDbKTQjpMkrw+y/8D5jNPgAzgOZ98clCtwAAAABJ
        RU5ErkJggg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AACAAQAAwAcAAMAHAADkLwAA/D8AAP//AAA=
</value>
  </data>
</root>
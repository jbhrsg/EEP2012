<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="serviceManager1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 111</value>
  </metadata>
  <metadata name="InfoConnection1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 158</value>
  </metadata>
  <metadata name="HRMAttendOverTimeApplyMaster.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 299</value>
  </metadata>
  <data name="HRMAttendOverTimeApplyMaster.CommandText" xml:space="preserve">
    <value>SELECT dbo.[HRMAttendOverTimeApplyMaster].*,'' as DEPT_Name,'' as ROTE_Name,'' as TotalHoursLMZ,'' as TotalHoursLMNZ,'' as TotalHoursTMZ,'' as TotalHoursTMNZ,'' as  TMOvertimeHrs,'' as LMOvertimeHrs FROM dbo.[HRMAttendOverTimeApplyMaster]</value>
  </data>
  <metadata name="ucHRMAttendOverTimeApplyMaster.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 346</value>
  </metadata>
  <metadata name="HRMAttendOverTimeApplyDetails.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 393</value>
  </metadata>
  <metadata name="ucHRMAttendOverTimeApplyDetails.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 628</value>
  </metadata>
  <metadata name="idHRMAttendOverTimeApplyMaster_HRMAttendOverTimeApplyDetails.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 675</value>
  </metadata>
  <metadata name="autoOverTimeNO.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 722</value>
  </metadata>
  <metadata name="infoHRM_BASE_BASE.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 769</value>
  </metadata>
  <metadata name="infoConnection2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 205</value>
  </metadata>
  <metadata name="infoOverTimeCauseID.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 816</value>
  </metadata>
  <metadata name="SumHRMAttendOverTimeApplyDetails.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 910</value>
  </metadata>
  <data name="SumHRMAttendOverTimeApplyDetails.CommandText" xml:space="preserve">
    <value>select t1.OverTimeYYMM,t1.EmployeeID,SumTotalHours1,SumTotalHours2 from
(
SELECT 
LEFT(CONVERT(NVARCHAR(10),d.OverTimeDate,120),7) as OverTimeYYMM
,m.EmployeeID
FROM [JBADMIN].[dbo].[HRMAttendOverTimeApplyDetails] as d
left join [JBADMIN].[dbo].[HRMAttendOverTimeApplyMaster] as m on m.OverTimeNO=d.OverTimeNO
group by LEFT(CONVERT(NVARCHAR(10),d.OverTimeDate,120),7),EmployeeID
) as t1 
full outer join
(
SELECT 
sum([TotalHours]) as SumTotalHours1
,LEFT(CONVERT(NVARCHAR(10),d.OverTimeDate,120),7) as OverTimeYYMM
,m.EmployeeID
FROM [JBADMIN].[dbo].[HRMAttendOverTimeApplyDetails] as d
left join [JBADMIN].[dbo].[HRMAttendOverTimeApplyMaster] as m on m.OverTimeNO=d.OverTimeNO
where  m.flowflag in ('N','P')
group by LEFT(CONVERT(NVARCHAR(10),d.OverTimeDate,120),7),EmployeeID
) as t2 on t2.EmployeeID=t1.EmployeeID and t2.OverTimeYYMM=t1.OverTimeYYMM
full outer join
(
SELECT 
sum([TotalHours]) as SumTotalHours2
,LEFT(CONVERT(NVARCHAR(10),d.OverTimeDate,120),7) as OverTimeYYMM
,m.EmployeeID
FROM [JBADMIN].[dbo].[HRMAttendOverTimeApplyDetails] as d
left join [JBADMIN].[dbo].[HRMAttendOverTimeApplyMaster] as m on m.OverTimeNO=d.OverTimeNO
where  m.flowflag ='Z'
group by LEFT(CONVERT(NVARCHAR(10),d.OverTimeDate,120),7),EmployeeID
)as t3 on t3.EmployeeID=t1.EmployeeID and t3.OverTimeYYMM=t1.OverTimeYYMM
where 1=0
order by OverTimeYYMM</value>
  </data>
  <metadata name="HRMAttendOverTimeApplyHospital.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 487</value>
  </metadata>
  <data name="HRMAttendOverTimeApplyHospital.CommandText" xml:space="preserve">
    <value>select a1.*,
(select COUNT(AutoKey) from HRMAttendOverTimeApplyHospital
where Employer=a1.Employer and ForeignLaborer=a1.ForeignLaborer
group by Employer,ForeignLaborer
) as counts,'' as counts1,'' as EmployeeCEName1,
(Select SUM(f.FeeAmount+f.tFeeAmount)-sum(IsNull(p.FeeAmount,0))
				from  [192.168.1.41].FWCRM.dbo.ARDetails a
				inner join  [192.168.1.41].FWCRM.dbo.ARMaster m on a.ARMasterID=m.ARMasterID
				inner join  [192.168.1.41].FWCRM.dbo.EmployeeFees f on a.FeeAccountID=f.FeeAccountID 
				left join  [192.168.1.41].FWCRM.dbo.EmployeePays p on a.FeeAccountID=p.FeeAccountID  		
				inner join  [192.168.1.41].FWCRM.dbo.FeeItem i on f.FeeID=i.FeeID	
				inner join  [192.168.1.41].FWCRM.dbo.Employee e on f.EmployeeID=e.EmployeeID						
	where m.YearMonth=(select MAX(YearMonth) from  [192.168.1.41].FWCRM.dbo.ARSetUpMaster where IsDormFeeEE=1) and f.EmployeeID=a1.ForeignLaborer) as debt
from HRMAttendOverTimeApplyHospital a1</value>
  </data>
  <metadata name="infoDataSource1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 581</value>
  </metadata>
  <metadata name="updateComponent1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 252</value>
  </metadata>
  <metadata name="EmployerName.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 1004</value>
  </metadata>
  <metadata name="infoConnection3.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 64</value>
  </metadata>
  <metadata name="GoToHospitalNumber.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 1051</value>
  </metadata>
  <metadata name="users.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 957</value>
  </metadata>
  <metadata name="EmployeeCEName.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 863</value>
  </metadata>
  <data name="EmployeeCEName.CommandText" xml:space="preserve">
    <value>SELECT  distinct top 100 er.EmployerID,e.EmployeeID,case (l.description) when '續聘' then '(續聘)' else '' end+e.EmployeeTcName+'/'+e.EmployeeEnName as EmployeeCEName,h.counts1,
(Select SUM(f.FeeAmount+f.tFeeAmount)-sum(IsNull(p.FeeAmount,0))
		from [192.168.1.41].FWCRM.dbo.ARDetails a
		inner join [192.168.1.41].FWCRM.dbo.ARMaster m on a.ARMasterID=m.ARMasterID 
			and m.EmployeeID=e.EmployeeID
		inner join [192.168.1.41].FWCRM.dbo.EmployeeFees f on a.FeeAccountID=f.FeeAccountID 
			and f.EmployeeID=e.EmployeeID
		left join [192.168.1.41].FWCRM.dbo.EmployeePays p on a.FeeAccountID=p.FeeAccountID 
	where m.YearMonth=(select MAX(YearMonth) from [192.168.1.41].FWCRM.dbo.ARSetUpMaster where IsDormFeeEE=1) and f.EmployeeID=e.EmployeeID) as debt
	From [192.168.1.41].FWCRM.dbo.Employee e
		inner join [192.168.1.41].FWCRM.dbo.EmployeeLogs l on e.EmployeeID=l.EmployeeID
		inner join [192.168.1.41].FWCRM.dbo.employer er on l.employerid=er.employerid
		left join 
		(
		select COUNT(AutoKey) as counts1,Employer,ForeignLaborer from JBADMIN.dbo.HRMAttendOverTimeApplyHospital
		group by Employer,ForeignLaborer
		) h on h.Employer=er.EmployerID and h.ForeignLaborer=e.EmployeeID	
	where l.EffectDate=(Select Max(EffectDate) from [192.168.1.41].FWCRM.dbo.EmployeeLogs where e.EmployeeID=EmployeeID and IsActive=1)
		and (l.EffectTypeID=1 or l.EffectTypeID=5 ) </value>
  </data>
  <metadata name="EmployeeDebt.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 440</value>
  </metadata>
  <data name="EmployeeDebt.CommandText" xml:space="preserve">
    <value>select * from(
Select f.EmployeeID,(SUM(f.FeeAmount+f.tFeeAmount)-sum(IsNull(p.FeeAmount,0))) as debt
				from ARDetails a
				inner join ARMaster m on a.ARMasterID=m.ARMasterID
				inner join EmployeeFees f on a.FeeAccountID=f.FeeAccountID 
				left join EmployeePays p on a.FeeAccountID=p.FeeAccountID  		
				inner join FeeItem i on f.FeeID=i.FeeID	
				inner join Employee ee on f.EmployeeID=ee.EmployeeID						
	where m.YearMonth=(select MAX(YearMonth) from ARSetUpMaster where IsDormFeeEE=1)
	group by f.EmployeeID
) tt</value>
  </data>
  <metadata name="HRMAttendOverTimeMealApplyType.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 534</value>
  </metadata>
  <metadata name="HRMAttendOverTimeApplyHospitalDrilldown.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>424, 442</value>
  </metadata>
  <metadata name="$this.TrayLargeIcon" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
</root>
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="WMaster.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="WMaster.RealDataSet" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAE5TeXN0ZW0uRGF0YSwgVmVyc2lvbj0yLjAuMC4wLCBDdWx0dXJl
        PW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAABNTeXN0ZW0uRGF0YS5E
        YXRhU2V0BQAAABdEYXRhU2V0LlJlbW90aW5nVmVyc2lvbhZEYXRhU2V0LlJlbW90aW5nRm9ybWF0H1Nj
        aGVtYVNlcmlhbGl6YXRpb25Nb2RlLkRhdGFTZXQJWG1sU2NoZW1hC1htbERpZmZHcmFtAwQEAQEOU3lz
        dGVtLlZlcnNpb24fU3lzdGVtLkRhdGEuU2VyaWFsaXphdGlvbkZvcm1hdAIAAAAjU3lzdGVtLkRhdGEu
        U2NoZW1hU2VyaWFsaXphdGlvbk1vZGUCAAAAAgAAAAkDAAAABfz///8fU3lzdGVtLkRhdGEuU2VyaWFs
        aXphdGlvbkZvcm1hdAEAAAAHdmFsdWVfXwAIAgAAAAAAAAAF+////yNTeXN0ZW0uRGF0YS5TY2hlbWFT
        ZXJpYWxpemF0aW9uTW9kZQEAAAAHdmFsdWVfXwAIAgAAAAEAAAAGBgAAAMsLPD94bWwgdmVyc2lvbj0i
        MS4wIiBlbmNvZGluZz0idXRmLTE2Ij8+DQo8eHM6c2NoZW1hIGlkPSJOZXdEYXRhU2V0IiB4bWxucz0i
        IiB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOm1zZGF0YT0i
        dXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTp4bWwtbXNkYXRhIj4NCiAgPHhzOmVsZW1lbnQgbmFtZT0i
        TmV3RGF0YVNldCIgbXNkYXRhOklzRGF0YVNldD0idHJ1ZSIgbXNkYXRhOkNhc2VTZW5zaXRpdmU9InRy
        dWUiIG1zZGF0YTpMb2NhbGU9InpoLUNOIj4NCiAgICA8eHM6Y29tcGxleFR5cGU+DQogICAgICA8eHM6
        Y2hvaWNlIG1pbk9jY3Vycz0iMCIgbWF4T2NjdXJzPSJ1bmJvdW5kZWQiPg0KICAgICAgICA8eHM6ZWxl
        bWVudCBuYW1lPSJFbXBsb3llZXMiPg0KICAgICAgICAgIDx4czpjb21wbGV4VHlwZT4NCiAgICAgICAg
        ICAgIDx4czpzZXF1ZW5jZT4NCiAgICAgICAgICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iRW1wbG95ZWVJ
        RCIgdHlwZT0ieHM6aW50IiBtc2RhdGE6dGFyZ2V0TmFtZXNwYWNlPSIiIC8+DQogICAgICAgICAgICAg
        IDx4czplbGVtZW50IG5hbWU9Ikxhc3ROYW1lIiB0eXBlPSJ4czpzdHJpbmciIG1zZGF0YTp0YXJnZXRO
        YW1lc3BhY2U9IiIgbWluT2NjdXJzPSIwIiAvPg0KICAgICAgICAgICAgICA8eHM6ZWxlbWVudCBuYW1l
        PSJGaXJzdE5hbWUiIHR5cGU9InhzOnN0cmluZyIgbXNkYXRhOnRhcmdldE5hbWVzcGFjZT0iIiBtaW5P
        Y2N1cnM9IjAiIC8+DQogICAgICAgICAgICAgIDx4czplbGVtZW50IG5hbWU9IlRpdGxlIiB0eXBlPSJ4
        czpzdHJpbmciIG1zZGF0YTp0YXJnZXROYW1lc3BhY2U9IiIgbWluT2NjdXJzPSIwIiAvPg0KICAgICAg
        ICAgICAgICA8eHM6ZWxlbWVudCBuYW1lPSJUaXRsZU9mQ291cnRlc3kiIHR5cGU9InhzOnN0cmluZyIg
        bXNkYXRhOnRhcmdldE5hbWVzcGFjZT0iIiBtaW5PY2N1cnM9IjAiIC8+DQogICAgICAgICAgICAgIDx4
        czplbGVtZW50IG5hbWU9IkJpcnRoRGF0ZSIgdHlwZT0ieHM6ZGF0ZVRpbWUiIG1zZGF0YTp0YXJnZXRO
        YW1lc3BhY2U9IiIgbWluT2NjdXJzPSIwIiAvPg0KICAgICAgICAgICAgICA8eHM6ZWxlbWVudCBuYW1l
        PSJQaG90b1BhdGgiIHR5cGU9InhzOnN0cmluZyIgbXNkYXRhOnRhcmdldE5hbWVzcGFjZT0iIiBtaW5P
        Y2N1cnM9IjAiIC8+DQogICAgICAgICAgICA8L3hzOnNlcXVlbmNlPg0KICAgICAgICAgIDwveHM6Y29t
        cGxleFR5cGU+DQogICAgICAgIDwveHM6ZWxlbWVudD4NCiAgICAgIDwveHM6Y2hvaWNlPg0KICAgIDwv
        eHM6Y29tcGxleFR5cGU+DQogICAgPHhzOnVuaXF1ZSBuYW1lPSJDb25zdHJhaW50MSIgbXNkYXRhOlBy
        aW1hcnlLZXk9InRydWUiPg0KICAgICAgPHhzOnNlbGVjdG9yIHhwYXRoPSIuLy9FbXBsb3llZXMiIC8+
        DQogICAgICA8eHM6ZmllbGQgeHBhdGg9IkVtcGxveWVlSUQiIC8+DQogICAgPC94czp1bmlxdWU+DQog
        IDwveHM6ZWxlbWVudD4NCjwveHM6c2NoZW1hPgYHAAAA3yU8ZGlmZmdyOmRpZmZncmFtIHhtbG5zOm1z
        ZGF0YT0idXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTp4bWwtbXNkYXRhIiB4bWxuczpkaWZmZ3I9InVy
        bjpzY2hlbWFzLW1pY3Jvc29mdC1jb206eG1sLWRpZmZncmFtLXYxIj48TmV3RGF0YVNldD48RW1wbG95
        ZWVzIGRpZmZncjppZD0iRW1wbG95ZWVzMTkiIG1zZGF0YTpyb3dPcmRlcj0iMCI+PEVtcGxveWVlSUQ+
        MTwvRW1wbG95ZWVJRD48TGFzdE5hbWU+RGF2b2xpbzwvTGFzdE5hbWU+PEZpcnN0TmFtZT5OYW5jeWE8
        L0ZpcnN0TmFtZT48VGl0bGU+U2FsZXMgUmVwcmVzZW50YXRpdmU8L1RpdGxlPjxUaXRsZU9mQ291cnRl
        c3k+TXMuPC9UaXRsZU9mQ291cnRlc3k+PEJpcnRoRGF0ZT4xOTQ4LTEyLTA4VDAwOjAwOjAwKzA4OjAw
        PC9CaXJ0aERhdGU+PFBob3RvUGF0aD5+L1RFU1QwMjE1L1RlbXBJbWFnZS9URVNUMDIxNV9NYXN0ZXJf
        RW1wbG95ZWVzXzEuanBlZzwvUGhvdG9QYXRoPjwvRW1wbG95ZWVzPjxFbXBsb3llZXMgZGlmZmdyOmlk
        PSJFbXBsb3llZXMyMCIgbXNkYXRhOnJvd09yZGVyPSIxIj48RW1wbG95ZWVJRD4yPC9FbXBsb3llZUlE
        PjxMYXN0TmFtZT5GdWxsZXIgQkI8L0xhc3ROYW1lPjxGaXJzdE5hbWU+QW5kcmV3YWE8L0ZpcnN0TmFt
        ZT48VGl0bGU+VmljZSBQcmVzaWRlbnQsIFNhbGVzPC9UaXRsZT48VGl0bGVPZkNvdXJ0ZXN5PkRyLiBB
        PC9UaXRsZU9mQ291cnRlc3k+PEJpcnRoRGF0ZT4xOTUyLTAyLTE5VDAwOjAwOjAwKzA4OjAwPC9CaXJ0
        aERhdGU+PFBob3RvUGF0aD5+L1RFU1QwMjE1L1RlbXBJbWFnZS9URVNUMDIxNV9NYXN0ZXJfRW1wbG95
        ZWVzXzIuanBlZzwvUGhvdG9QYXRoPjwvRW1wbG95ZWVzPjxFbXBsb3llZXMgZGlmZmdyOmlkPSJFbXBs
        b3llZXMyMSIgbXNkYXRhOnJvd09yZGVyPSIyIj48RW1wbG95ZWVJRD4zPC9FbXBsb3llZUlEPjxMYXN0
        TmFtZT5MZXZlcmxpbmc8L0xhc3ROYW1lPjxGaXJzdE5hbWU+SmFuZXQ8L0ZpcnN0TmFtZT48VGl0bGU+
        U2FsZXMgUmVwcmVzZW50YXRpdmU8L1RpdGxlPjxUaXRsZU9mQ291cnRlc3k+TXMuPC9UaXRsZU9mQ291
        cnRlc3k+PEJpcnRoRGF0ZT4xOTYzLTA4LTMwVDAwOjAwOjAwKzA4OjAwPC9CaXJ0aERhdGU+PFBob3Rv
        UGF0aD5+L1RFU1QwMjE1L1RlbXBJbWFnZS9URVNUMDIxNV9NYXN0ZXJfRW1wbG95ZWVzXzMuanBlZzwv
        UGhvdG9QYXRoPjwvRW1wbG95ZWVzPjxFbXBsb3llZXMgZGlmZmdyOmlkPSJFbXBsb3llZXMyMiIgbXNk
        YXRhOnJvd09yZGVyPSIzIj48RW1wbG95ZWVJRD40PC9FbXBsb3llZUlEPjxMYXN0TmFtZT5QZWFjb2Nr
        PC9MYXN0TmFtZT48Rmlyc3ROYW1lPk1hcmdhcmV0PC9GaXJzdE5hbWU+PFRpdGxlPlNhbGVzIFJlcHJl
        c2VudGF0aXZlPC9UaXRsZT48VGl0bGVPZkNvdXJ0ZXN5Pk1ycy48L1RpdGxlT2ZDb3VydGVzeT48Qmly
        dGhEYXRlPjE5MzctMDktMTlUMDA6MDA6MDArMDg6MDA8L0JpcnRoRGF0ZT48UGhvdG9QYXRoPn5cVEVT
        VDAyMTVcVGVtcEltYWdlXERTQ0YwMDI1LkpQRzwvUGhvdG9QYXRoPjwvRW1wbG95ZWVzPjxFbXBsb3ll
        ZXMgZGlmZmdyOmlkPSJFbXBsb3llZXMyMyIgbXNkYXRhOnJvd09yZGVyPSI0Ij48RW1wbG95ZWVJRD41
        PC9FbXBsb3llZUlEPjxMYXN0TmFtZT5CdWNoYW5hbjwvTGFzdE5hbWU+PEZpcnN0TmFtZT5TdGV2ZW5h
        PC9GaXJzdE5hbWU+PFRpdGxlPlNhbGVzIE1hbmFnZXI8L1RpdGxlPjxUaXRsZU9mQ291cnRlc3k+TXIu
        PC9UaXRsZU9mQ291cnRlc3k+PEJpcnRoRGF0ZT4xOTU1LTAzLTA0VDAwOjAwOjAwKzA4OjAwPC9CaXJ0
        aERhdGU+PC9FbXBsb3llZXM+PEVtcGxveWVlcyBkaWZmZ3I6aWQ9IkVtcGxveWVlczI0IiBtc2RhdGE6
        cm93T3JkZXI9IjUiPjxFbXBsb3llZUlEPjY8L0VtcGxveWVlSUQ+PExhc3ROYW1lPlN1eWFtYTwvTGFz
        dE5hbWU+PEZpcnN0TmFtZT5NaWNoYWVsPC9GaXJzdE5hbWU+PFRpdGxlPlNhbGVzIFJlcHJlc2VudGF0
        aXZlPC9UaXRsZT48VGl0bGVPZkNvdXJ0ZXN5Pk1yLjwvVGl0bGVPZkNvdXJ0ZXN5PjxCaXJ0aERhdGU+
        MTk2My0wNy0wMlQwMDowMDowMCswODowMDwvQmlydGhEYXRlPjxQaG90b1BhdGg+flxURVNUMDIxNVxU
        ZW1wSW1hZ2VcRFNDRjAwMTYuSlBHPC9QaG90b1BhdGg+PC9FbXBsb3llZXM+PEVtcGxveWVlcyBkaWZm
        Z3I6aWQ9IkVtcGxveWVlczI1IiBtc2RhdGE6cm93T3JkZXI9IjYiPjxFbXBsb3llZUlEPjc8L0VtcGxv
        eWVlSUQ+PExhc3ROYW1lPktpbmc8L0xhc3ROYW1lPjxGaXJzdE5hbWU+Um9iZXJ0YTwvRmlyc3ROYW1l
        PjxUaXRsZT5TYWxlcyBSZXByZXNlbnRhdGl2ZTwvVGl0bGU+PFRpdGxlT2ZDb3VydGVzeT5Nci48L1Rp
        dGxlT2ZDb3VydGVzeT48QmlydGhEYXRlPjE5NjAtMDUtMjlUMDA6MDA6MDArMDg6MDA8L0JpcnRoRGF0
        ZT48UGhvdG9QYXRoPn5cVEVTVDAyMTVcVGVtcEltYWdlXERTQ0YwMDUyLkpQRzwvUGhvdG9QYXRoPjwv
        RW1wbG95ZWVzPjxFbXBsb3llZXMgZGlmZmdyOmlkPSJFbXBsb3llZXMyNiIgbXNkYXRhOnJvd09yZGVy
        PSI3Ij48RW1wbG95ZWVJRD44PC9FbXBsb3llZUlEPjxMYXN0TmFtZT5DYWxsYWhhbjwvTGFzdE5hbWU+
        PEZpcnN0TmFtZT5MYXVyYTwvRmlyc3ROYW1lPjxUaXRsZT5JbnNpZGUgU2FsZXMgQ29vcmRpbmF0b3I8
        L1RpdGxlPjxUaXRsZU9mQ291cnRlc3k+TXMuPC9UaXRsZU9mQ291cnRlc3k+PEJpcnRoRGF0ZT4xOTU4
        LTAxLTA5VDAwOjAwOjAwKzA4OjAwPC9CaXJ0aERhdGU+PFBob3RvUGF0aD5odHRwOi8vYWNjd2ViL2Vt
        bXBsb3llZXMvZGF2b2xpby5ibXA8L1Bob3RvUGF0aD48L0VtcGxveWVlcz48RW1wbG95ZWVzIGRpZmZn
        cjppZD0iRW1wbG95ZWVzMjciIG1zZGF0YTpyb3dPcmRlcj0iOCI+PEVtcGxveWVlSUQ+OTwvRW1wbG95
        ZWVJRD48TGFzdE5hbWU+RG9kc3dvcnRoPC9MYXN0TmFtZT48Rmlyc3ROYW1lPkFubmU8L0ZpcnN0TmFt
        ZT48VGl0bGU+U2FsZXMgUmVwcmVzZW50YXRpdmU8L1RpdGxlPjxUaXRsZU9mQ291cnRlc3k+TXMuPC9U
        aXRsZU9mQ291cnRlc3k+PEJpcnRoRGF0ZT4xOTY2LTAxLTI3VDAwOjAwOjAwKzA4OjAwPC9CaXJ0aERh
        dGU+PFBob3RvUGF0aD5odHRwOi8vYWNjd2ViL2VtbXBsb3llZXMvZGF2b2xpby5ibXA8L1Bob3RvUGF0
        aD48L0VtcGxveWVlcz48RW1wbG95ZWVzIGRpZmZncjppZD0iRW1wbG95ZWVzMjgiIG1zZGF0YTpyb3dP
        cmRlcj0iOSI+PEVtcGxveWVlSUQ+MTA8L0VtcGxveWVlSUQ+PExhc3ROYW1lPlRFU1Q8L0xhc3ROYW1l
        PjxGaXJzdE5hbWU+QW5keWE8L0ZpcnN0TmFtZT48VGl0bGU+U2FsZXM8L1RpdGxlPjwvRW1wbG95ZWVz
        PjxFbXBsb3llZXMgZGlmZmdyOmlkPSJFbXBsb3llZXMyOSIgbXNkYXRhOnJvd09yZGVyPSIxMCI+PEVt
        cGxveWVlSUQ+MTE8L0VtcGxveWVlSUQ+PExhc3ROYW1lPnRlc3RhIDwvTGFzdE5hbWU+PEZpcnN0TmFt
        ZT5hbmR5IGthbzwvRmlyc3ROYW1lPjxUaXRsZT5TYWxlczwvVGl0bGU+PC9FbXBsb3llZXM+PEVtcGxv
        eWVlcyBkaWZmZ3I6aWQ9IkVtcGxveWVlczMwIiBtc2RhdGE6cm93T3JkZXI9IjExIj48RW1wbG95ZWVJ
        RD4xMjwvRW1wbG95ZWVJRD48TGFzdE5hbWU+dGVzdCA8L0xhc3ROYW1lPjxGaXJzdE5hbWU+Z2FyeTwv
        Rmlyc3ROYW1lPjxUaXRsZT5NYW5hZ2VyPC9UaXRsZT48VGl0bGVPZkNvdXJ0ZXN5Pm1yLjwvVGl0bGVP
        ZkNvdXJ0ZXN5PjwvRW1wbG95ZWVzPjxFbXBsb3llZXMgZGlmZmdyOmlkPSJFbXBsb3llZXMzMSIgbXNk
        YXRhOnJvd09yZGVyPSIxMiI+PEVtcGxveWVlSUQ+MTM8L0VtcGxveWVlSUQ+PExhc3ROYW1lPktBTzwv
        TGFzdE5hbWU+PEZpcnN0TmFtZT5BTkRZPC9GaXJzdE5hbWU+PFRpdGxlPk1hbmFnZXI8L1RpdGxlPjxU
        aXRsZU9mQ291cnRlc3k+TXIuPC9UaXRsZU9mQ291cnRlc3k+PC9FbXBsb3llZXM+PEVtcGxveWVlcyBk
        aWZmZ3I6aWQ9IkVtcGxveWVlczMyIiBtc2RhdGE6cm93T3JkZXI9IjEzIj48RW1wbG95ZWVJRD4xNDwv
        RW1wbG95ZWVJRD48TGFzdE5hbWU+a2FvPC9MYXN0TmFtZT48Rmlyc3ROYW1lPmFuZHk8L0ZpcnN0TmFt
        ZT48VGl0bGVPZkNvdXJ0ZXN5Pk1yLjwvVGl0bGVPZkNvdXJ0ZXN5PjwvRW1wbG95ZWVzPjxFbXBsb3ll
        ZXMgZGlmZmdyOmlkPSJFbXBsb3llZXMzMyIgbXNkYXRhOnJvd09yZGVyPSIxNCI+PEVtcGxveWVlSUQ+
        MTU8L0VtcGxveWVlSUQ+PExhc3ROYW1lPnRlc3Q8L0xhc3ROYW1lPjxGaXJzdE5hbWU+YW5keTwvRmly
        c3ROYW1lPjwvRW1wbG95ZWVzPjxFbXBsb3llZXMgZGlmZmdyOmlkPSJFbXBsb3llZXMzNCIgbXNkYXRh
        OnJvd09yZGVyPSIxNSI+PEVtcGxveWVlSUQ+MTY8L0VtcGxveWVlSUQ+PExhc3ROYW1lPmthbzwvTGFz
        dE5hbWU+PEZpcnN0TmFtZT5hbmR5PC9GaXJzdE5hbWU+PFRpdGxlPk1hbmFnZXI8L1RpdGxlPjxUaXRs
        ZU9mQ291cnRlc3k+TXIuPC9UaXRsZU9mQ291cnRlc3k+PC9FbXBsb3llZXM+PEVtcGxveWVlcyBkaWZm
        Z3I6aWQ9IkVtcGxveWVlczM1IiBtc2RhdGE6cm93T3JkZXI9IjE2Ij48RW1wbG95ZWVJRD4xNzwvRW1w
        bG95ZWVJRD48TGFzdE5hbWU+a2FvPC9MYXN0TmFtZT48Rmlyc3ROYW1lPmFuZHk8L0ZpcnN0TmFtZT48
        VGl0bGU+TWFuYWdlcjwvVGl0bGU+PFRpdGxlT2ZDb3VydGVzeT5Nci48L1RpdGxlT2ZDb3VydGVzeT48
        L0VtcGxveWVlcz48RW1wbG95ZWVzIGRpZmZncjppZD0iRW1wbG95ZWVzMzYiIG1zZGF0YTpyb3dPcmRl
        cj0iMTciPjxFbXBsb3llZUlEPjE4PC9FbXBsb3llZUlEPjxMYXN0TmFtZT5LQU88L0xhc3ROYW1lPjxG
        aXJzdE5hbWU+QU5EWTwvRmlyc3ROYW1lPjxUaXRsZT5TYWxlczwvVGl0bGU+PFRpdGxlT2ZDb3VydGVz
        eT5Nci48L1RpdGxlT2ZDb3VydGVzeT48L0VtcGxveWVlcz48L05ld0RhdGFTZXQ+PC9kaWZmZ3I6ZGlm
        ZmdyYW0+BAMAAAAOU3lzdGVtLlZlcnNpb24EAAAABl9NYWpvcgZfTWlub3IGX0J1aWxkCV9SZXZpc2lv
        bgAAAAAICAgIAgAAAAAAAAD//////////ws=
</value>
  </data>
  <metadata name="$this.TrayLargeIcon" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
</root>